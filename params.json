{"name":"Animate-js","tagline":"a micro-animation framework for JavaScript","body":"#animate-js\r\n\r\n*a micro-animation framework for JavaScript*\r\n\r\n##Concept\r\n\r\n**animate-js** is super-lightweight animation framework that can be used to animate *'anything'*.\r\n\r\nThe library knows nothing about what kinds of things you are trying to animate, it doesn't change\r\nthe properties of the things you are animating itself, but provides callbacks for you to do this yourself. Basic timeline controls are provided to manipulate animations from your own scripts.\r\n\r\nThis was created to syncronize the animation of CSS properties and SVG values. The code needed to \r\nwork cross-browser on latest builds, and work on Internet Expolorer as far back as IE9.\r\n\r\n**Library size:** ~1 kb\r\n\r\n##Donate\r\n\r\nThis code is free to use and distribute with attribution under the MIT License.\r\n\r\nBitcoin donations are always welcome if you use this code or find it helpful:\r\n\r\n<a class=\"coinbase-button\" data-code=\"684007a4c9198aaf59a4cbf2b45a6472\" data-button-style=\"donation_small\" href=\"https://coinbase.com/checkouts/684007a4c9198aaf59a4cbf2b45a6472\"><img src=\"https://coinbase.com/assets/buttons/donation_small-77a6e527206c0407ffd8b2e8b76556b0.png\"></a><script src=\"https://coinbase.com/assets/button.js\" type=\"text/javascript\"></script>\r\n\r\n##Basic Usage\r\n\r\nFirst we include the *animate.min.js* script in your page:\r\n\r\n    <script src=\"animate.min.js\" type=\"text/javascript\" ></script>\r\n\r\nThen define your timeline with an object-reference and an ojbect containing frames values. In the example below, we are controlling the opacity of a DOM element. We are getting the object using\r\njquery with: `$('#someid')`.\r\n\r\nAt second `0`, we want the opacity value to be `1`, at second `1` we want the  opacity value to be\r\n`0`; and so on.\r\n\r\n    var timeline = animate($('#someid'), {\r\n      0: 1,\r\n      1: 0,\r\n      2: 1 \r\n    });\r\n\r\nProvide an update callback. This is where you apply the animation to the object(s) you want to \r\nanimate. The scope of *`this`* within each callback is the timeline object.\r\n\r\n    // Provide a callback for each update of the timeline\r\n    timeline.onUpdate(changeOpacity);\r\n\r\nYour update callback make look somethinglike this:\r\n\r\n    function changeOpacity (obj, val) {\r\n      obj.setAttribute('opacity', val);\r\n    }\r\n\r\nBegin playing the animation.\r\n\r\n    timeline.play();\r\n\r\nThat's it!\r\n\r\nSimple.\r\n\r\n##Timeline Control\r\n\r\n###`timeline.play()`\r\n\r\nBegins playing a timeline.\r\n\r\n###`timeline.pause()`\r\n\r\nPauses a timeline at it's current position.\r\n\r\n###`timeline.restart()`\r\n\r\n - Pauses a timeline at it's current position.\r\n - Resets the playhead to the start of the animation.\r\n - Begins playing the timeline again.\r\n\r\n###`timeline.onUpdate(callback)`\r\n\r\nFunctions passed to onUpdate() will be fired every time the internal animation timer is fired.\r\n\r\n    function changeOpacity (obj, val) {\r\n      obj.setAttribute('opacity', val);\r\n    }\r\n\r\n    timeline.onUpdate(changeOpacity);\r\n\r\n###`timeline.onEnd(callback)`\r\n\r\nFunctions passed to onEnd() will be fired once when the animation has finished. Before the callback\r\nis fired, the timeline will be stopped. You will have to call play if you want it to play again.\r\n    \r\n    timeline.onEnd(callback);\r\n\r\n###Looping Timelines\r\n\r\nUse the `onEnd(callback)` to loop a timeline, like this:\r\n    \r\n    function restartCallBack () {\r\n      this.restart();\r\n    };\r\n\r\n    timeline.onEnd(restartCallback);\r\n\r\n##Extending Easing Types\r\n\r\nUse the `extend()` method to add new types of easing. **animate-js** ships with *linear* only out of the box. You can find more easing extensions in `./tests/`.\r\n\r\n    // Add a new easing method\r\n    animate().extend('easing', {\r\n      outCubic: function (t, b, c, d) {\r\n        return c*((t=t/d-1)*t*t + 1) + b;\r\n      }\r\n    });\r\n\r\n##Examples\r\n\r\nComming soon.\r\n\r\n##License\r\n\r\n    MIT License (MIT)\r\n    \r\n    Copyright Â© 2014 Alistair G MacDonald\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in\r\n    all copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n    THE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}